# Get External IP / Internet Speed
alias myip="curl https://ipinfo.io/json" # or /ip for plain-text ip
alias speedtest="curl -s https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest.py | python -"

# Quickly serve the current directory as HTTP
alias serve='ruby -run -e httpd . -p 8000'  # Or python -m SimpleHTTPServer :)

alias kitt="open https://kitt.lewagon.com/"

# Open tickets page
tickets() {
  if [ "$2" = 'dev' ]
    then
      open http://localhost:3000/camps/$1/tickets
    else
      open https://kitt.lewagon.com/camps/$1/tickets
  fi
}

camp() {
  if [ "$2" = 'dev' ]
    then
      open http://localhost:3000/camps/$1
    else
      open https://kitt.lewagon.com/camps/$1
  fi
}

# Open calendar page
calendar() {
  if [ "$2" = 'dev' ]
    then
      open http://localhost:3000/camps/$1/calendar
    else
      open https://kitt.lewagon.com/camps/$1/calendar
  fi
}

# Open classmates page
classmates() {
  if [ "$2" = 'dev' ]
    then
      open http://localhost:3000/camps/$1/classmates
    else
      open https://kitt.lewagon.com/camps/$1/classmates
  fi
}

# Open dashboard page
dashboard() {
  if [ "$2" = 'dev' ]
    then
      open http://localhost:3000/camps/$1/day_dashboard
    else
      open https://kitt.lewagon.com/camps/$1/day_dashboard
  fi
}

# Open statistics page
stats() {
  if [ "$2" = 'dev' ]
    then
      open http://localhost:3000/camps/$1/tickets/day_dashboard
    else
      open https://kitt.lewagon.com/camps/$1/tickets/day_dashboard
  fi
}

# search alumni
search() {
  if [ "$2" = 'dev' ]
    then
      open http://localhost:3000/alumni\?search=$1
    else
      open https://kitt.lewagon.com/alumni\?search=$1
  fi
}

# alumni show
alumni() {
  if [ "$2" = 'dev' ]
    then
      open http://localhost:3000/alumni/$1
    else
      open https://kitt.lewagon.com/alumni/$1
  fi
}

# feedbacks index
feedbacks() {
  if [ "$2" = 'dev' ]
    then
      open http://localhost:3000/camps/$1/feedbacks
    else
      open https://kitt.lewagon.com/camps/$1/feedbacks
  fi
}

# products
products() {
  if [ "$2" = 'dev' ]
    then
      open http://localhost:3000/camps/$1/products
    else
      open https://kitt.lewagon.com/camps/$1/products
  fi
}

# Open driver dashboard
city() {
  if [ $# -eq 1 ];
    then
      if [ "$1" = 'dev' ]
        then
          open http://localhost:3000/cities/london
      else
        open https://kitt.lewagon.com/cities/$1
      fi
  else
    if [ "$2" = 'dev' ]
      then
        open http://localhost:3000/cities/$1
    else
      open https://kitt.lewagon.com/cities/london
    fi
  fi
}

# Open webpage
web() {
  open https://www.$1
}

# Open slack
alias slack="open -a 'slack'"

# Kick start day
alias dev="open -a slack; open -a spark; open -a 'firefox developer edition'; open -a music; open -a notion; code .;"

# Open an app
app() {
  open -a "$1"
}

# Open repo
repo() {
  if [ $# -eq 1 ];
    then
      open https://www.github.com/$1
  else
    open https://www.github.com/$1/$2
  fi
}

# Open PRs of repo
pr() {
  open https://www.github.com/$1/$2/pulls
}

# Open issues of repo
issues() {
  open https://www.github.com/$1/$2/issues
}

# navigate in code folder
goto() {
  cd ~/code/$1
}

# navigate in folder and open
sttt() {
  cd ~/code/$1; stt;
}

# start mongodb
alias mongodb='$HOME/mongodb/bin/mongod --dbpath=$HOME/mongodb-data'

# launch webpack-dev-server
alias wds='webpack-dev-server'

# used nvmrc version and launch webpack-dev-server
alias nwds='nvm use && webpack-dev-server'

# rails console
alias rc="rails c"

# rails server
alias rs="rails s"

# rails db:migrate
alias rdbm="rails db:migrate"

# rails db:rollback
alias rdbr="rails db:rollback"

# rails db:seed
alias rdbs="rails db:seed"

# rails db:reset
alias rdbrst="rails db:reset"

# rails db:drop
alias rdbd="rails db:drop"

# rails db:create
alias rdbc="rails db:create"

# rails db:drop db:create db:migrate db:seed
alias rdb="rails db:drop db:create db:migrate db:seed"

# rake db:import_from_aws
alias aws="rake db:import_from_aws && rake s3:sync_prod_bucket_to_dev_bucket"

# jupyter notebook
alias jn="jupyter notebook"

jslides() {
  # jupyter nbconvert --to slides --post serve $1
  ls *.ipynb | entr -r jupyter nbconvert "$1" --to slides --post serve --TemplateExporter.extra_template_basedirs=../templates --template=kitt;
}

# Delete squashed and merged branches
alias sweep='git checkout -q master && git for-each-ref refs/heads/ "--format=%(refname:short)" | while read branch; do mergeBase=$(git merge-base master $branch) && [[ $(git cherry master $(git commit-tree $(git rev-parse $branch^{tree}) -p $mergeBase -m _)) == "-"* ]] && git branch -D $branch; done'
